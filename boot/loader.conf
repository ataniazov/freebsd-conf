# This is loader.conf - a file full of useful variables that you can
# set to change the default load behavior of your system. You should
# not edit this file!  Put any overrides into one of the
# loader_conf_files instead and you will be able to update these
# defaults later without spamming your local configuration information.
#
# All arguments must be in double quotes.
#
# $FreeBSD: /boot/loader.conf


##############################################################
###  Basic configuration options  ############################
##############################################################

#exec=".( Loading /boot/defaults/loader.conf ) cr"

#kernel="kernel"		# /boot sub-directory containing kernel and modules
#bootfile="kernel"	# Kernel name (possibly absolute path)
#kernel_options=""	# Flags to be passed to the kernel

#loader_conf_files="/boot/device.hints /boot/loader.conf /boot/loader.conf.local"
#nextboot_conf="/boot/nextboot.conf"
#nextboot_enable="NO"

verbose_loading="NO"		# Set to YES for verbose loader output


##############################################################
###  Splash screen configuration  ############################
##############################################################

#splash_bmp_load="NO"		# Set this to YES for bmp splash screen!
#splash_pcx_load="NO"		# Set this to YES for pcx splash screen!
#splash_txt_load="NO"		# Set this to YES for TheDraw splash screen!
#vesa_load="NO"			# Set this to YES to load the vesa module
#bitmap_load="NO"		# Set this to YES if you want splash screen!
#bitmap_name="splash.bmp"	# Set this to the name of the file
#bitmap_type="splash_image_data" # and place it on the module_path


##############################################################
###  Random number generator configuration ###################
##############################################################

#entropy_cache_load="NO"			# Set this to YES to load entropy at boot time
#entropy_cache_name="/boot/entropy"	# Set this to the name of the file
#entropy_cache_type="/boot/entropy"	
#kern.random.sys.seeded="0"		# Set this to 1 to start /dev/random
					# without waiting for a (re)seed.


##############################################################
###  Loader settings  ########################################
##############################################################

#loader_delay="3"		# Delay in seconds before loading anything.
				# Default is unset and disabled (no delay).

autoboot_delay="4"		# Delay in seconds before autobooting,
				# set to -1 if you don't want user to be
				# allowed to interrupt autoboot process and
				# escape to the loader prompt, set to
				# "NO" to disable autobooting

#beastie_disable="NO"		# Turn the beastie boot menu on and off
#kernels="kernel kernel.old"	# Kernels to display in the boot menu
#loader_logo="orbbw"		# Desired logo: orbbw, orb, fbsdbw, beastiebw, beastie, none
#comconsole_speed="9600"	# Set the current serial console speed
#console="vidconsole"		# A comma separated list of console(s)
#currdev="disk1s1a"		# Set the current device
#module_path="/boot/modules"	# Set the module search path
#prompt="\\${interpret}"	# Set the command prompt
#root_disk_unit="0"		# Force the root disk unit number
#rootdev="disk1s1a"		# Set the root filesystem
#tftp.blksize="1428"		# Set the RFC 2348 TFTP block size.
				# If the TFTP server does not support RFC 2348,
				# the block size is set to 512.  If the value
				# is out of range ( < 8 || > 9008 ) an error is
				# returned.


##############################################################
###  Kernel settings  ########################################
##############################################################

# The following boot_ variables are enabled by setting them to any value.
# Their presence in the kernel environment (see kenv(1)) has the same
# effect as setting the given boot flag (see boot(8)).

#boot_askname=""	# -a: Prompt the user for the name of the root device
#boot_cdrom=""		# -C: Attempt to mount root file system from CD-ROM
#boot_ddb=""		# -d: Instructs the kernel to start in the DDB debugger
#boot_dfltroot=""	# -r: Use the statically configured root file system
#boot_gdb=""		# -g: Selects gdb-remote mode for the kernel debugger
#boot_multicons=""	# -D: Use multiple consoles
#boot_mute=""		# -m: Mute the console
#boot_pause=""		# -p: Pause after each line during device probing
#boot_serial=""		# -h: Use serial console
#boot_single=""		# -s: Start system in single-user mode
#boot_verbose=""	# -v: Causes extra debugging information to be printed
#init_path="/sbin/init:/sbin/oinit:/sbin/init.bak:/rescue/init"
			# Sets the list of init candidates
#init_shell="/bin/sh"	# The shell binary used by init(8).
#init_script=""		# Initial script to run by init(8) before chrooting.
#init_chroot=""		# Directory for init(8) to chroot into.


# Use new graphical console driver
kern.vty=vt
# Use a text mode
#hw.vga.textmode=1


# Boot-time kernel tuning
kern.ipc.shmseg=1024
kern.ipc.shmmni=1024
kern.maxproc=10000

# Chromium need this. Why?
sem_load="YES"
# Linux base c6 kernel module load
linux_load="YES"

# nvidia module load
#nvidia_load="YES"

# Wireless drivers "ath" for atheros devices, "wi" for Intersil Prism
if_ath_load="YES"
#if_wi_load="YES"

# Cryptographic support for the security protocols
wlan_wep_load="YES"
wlan_ccmp_load="YES"
wlan_tkip_load="YES"

# Sound
snd_driver_load="YES"
snd_hda_load="YES"

# Load MMC/SD card-reader support
mmc_load="YES"
mmcsd_load="YES"
sdhci_load="YES"

# Access ATAPI devices through the CAM subsystem
atapicam_load="YES"

# Filesystems in Userspace
fuse_load="YES"

# Intel Core thermal sensors
coretemp_load="YES"

# AMD K8, K10, K11 thermal sensors
#amdtemp_load="YES"

# In-memory filesystems
tmpfs_load="YES"

# Asynchronous I/O
aio_load="YES"

# Handle Unicode on removable media
libiconv_load="YES"
libmchain_load="YES"
cd9660_iconv_load="YES"
msdosfs_iconv_load="YES"

# Userland character device driver for webcams
cuse4bsd_load="YES"
